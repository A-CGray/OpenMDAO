branches:
  only:
  - master

sudo: false

os:
  - linux

language: generic

env:
- PY=2.7 MPI=1
- PY=3.4 MPI=1
- PY=2.7 MPI=
- PY=3.4 MPI=


addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    packages:
    - gfortran
    - libblas-dev
    - liblapack-dev
    - libopenmpi-dev
    - openmpi-bin

notifications:
  slack: 'openmdao:GRr0MeNdmks2i7qCTWGLoOj7#testing'

before_install:
- OS=$(if [[ "$TRAVIS_OS_NAME" = "osx" ]]; then echo "MacOSX"; else echo "Linux"; fi)
- if [ "$OS" = "MacOSX" ] && [ "$MPI" ]; then brew install openmpi; fi
- wget "https://repo.continuum.io/miniconda/Miniconda-latest-$OS-x86_64.sh" -O miniconda.sh
- chmod +x miniconda.sh
- if [ "$OS" = "Linux" ]; then
    ./miniconda.sh -b  -p /home/travis/miniconda;
  fi
- if [ "$OS" = "MacOSX" ]; then
    ./miniconda.sh -b  -p /Users/travis/miniconda;
  fi
- PATHPREFIX=$(if [[ "$TRAVIS_OS_NAME" = "osx" ]]; then echo "/Users/travis/miniconda/bin"; else echo "/home/travis/miniconda/bin"; fi)
- export PATH=$PATHPREFIX:$PATH
- export OPENMDAO_TEST_DOCS=1

install:
- conda install --yes python=$PY numpy==1.11.2 scipy nose sphinx mock swig
- if [ "$OS" = "Linux" ]; then
    if [ "$PY" = "2.7" ]; then
        pip install https://openmdao.org/dists/pyoptsparse-1.0.0-cp27-none-linux_x86_64.whl;
    elif [ "$PY" = "3.4" ]; then
        pip install https://openmdao.org/dists/pyoptsparse-1.0.0-py3-none-linux_x86_64.whl;
    fi
  fi
- if [ "$OS" = "MacOSX" ]; then
    if [ "$PY" = "2.7" ]; then
        pip install https://openmdao.org/dists/pyoptsparse-1.0.0-py2-none-macosx_10_5_x86_64.whl;
    elif [ "$PY" = "3.4" ]; then
        pip install https://openmdao.org/dists/pyoptsparse-1.0.0-cp34-none-macosx_10_5_x86_64.whl;
    fi
  fi
- if [ "$MPI" ]; then
    pip install mpi4py;
    pip install git+https://bitbucket.org/petsc/petsc4py@3.7.0;
  fi
- pip install redbaron
- pip install git+https://github.com/OpenMDAO/testflo.git
- pip install coverage
- pip install coveralls
- pip install -e .

script:
# make docs first
- cd openmdao/docs
- make all
# run all openmdao tests
- testflo -n 1 openmdao -m "ptest*"
- testflo -n 1 openmdao --coverage --coverpkg openmdao

after_success:
  coveralls
