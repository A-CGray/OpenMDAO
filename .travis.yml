branches:
  only:
  - master

sudo: false

os:
- linux

language: generic

env:
- PY=2.7 MPI=1
- PY=3.4 MPI=1
- PY=2.7 MPI=
- PY=3.4 MPI=
- PY=3.6 MPI=

addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    packages:
    - gfortran
    - libblas-dev
    - liblapack-dev
    - libopenmpi-dev
    - openmpi-bin
    ssh_known_hosts:
    - web543.webfaction.com

notifications:
  slack:
    secure: IDXJIZkAQsuVPEHUbU5dsgeEB12BTXdCY/+gn9LAbp5+He2XoXOOto5D8rUXwfvrHnhHOwWtcNhqikM8EF4/v+2QrfpJiecfRb8nrxqK8DmP9FTWDfwX563TaaeHEJE77Iasa892nTCkW9nNo+4Ns1rTpdLu4IGS1/ACl8aqhVm103nxxwqNhW8WxEd3gICdcibd5bUiVQeiZx8g8p5RCv+zpAyR/ve9UDDp7A90jm2jmHuZGv7aZK8t7Zu2CScHCD7r064QKduhlXWBqNnjMxTmWtuif8rr62N4i+uRuDWPGwfZO7QJphi1StsfN+hXPolyuFAcQYJ0JKaHawnGs+a8DTeqzh9CQsyR1K+NGXHIiOqlX25kECf09jSeKq1Wa2XeyGzx1yCgzcaWKWVWN750XbTCPjsZPganek6VznupotUrXSjNwd0G2txUbhSKJBgQ8Pv9vGK5hhSYsy8Md3t/n9QOslk7UWu8HMruVpiF+VTrfkK87UTQV2tss8Kdag+yVussJWYpGHBjRlVUEjZJ2XYZ6jHaELYWImQBrBD8Qi+ow0knxXtwTkHShBKGgAxrtT/Ia2eW7zZ5eHGqagJiICf8HllwVAddF01ybk/6rOGHmtQ1x6A32GlPljA+WWPJhLH/6S5jOfUW63+wnkYSnr5M2d8xFI9AbgKK/lE=

before_install:
- if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then
    openssl aes-256-cbc -K $encrypted_67e08862e114_key -iv $encrypted_67e08862e114_iv -in deploy.rsa.enc -out /tmp/deploy.rsa -d;
  fi
- OS=$(if [[ "$TRAVIS_OS_NAME" = "osx" ]]; then echo "MacOSX"; else echo "Linux"; fi)
- if [ "$OS" = "MacOSX" ] && [ "$MPI" ]; then
    brew install openmpi;
  fi
- wget "https://repo.continuum.io/miniconda/Miniconda-latest-$OS-x86_64.sh" -O miniconda.sh
- chmod +x miniconda.sh
- if [ "$OS" = "Linux" ]; then ./miniconda.sh -b  -p /home/travis/miniconda; fi
- if [ "$OS" = "MacOSX" ]; then ./miniconda.sh -b  -p /Users/travis/miniconda; fi
- PATHPREFIX=$(if [[ "$TRAVIS_OS_NAME" = "osx" ]]; then echo "/Users/travis/miniconda/bin";
  else echo "/home/travis/miniconda/bin"; fi)
- export PATH=$PATHPREFIX:$PATH
- export OPENMDAO_TEST_DOCS=1
- if [[ "$TRAVIS_PULL_REQUEST" = "false" ]]; then
    echo -e "Host web543.webfaction.com\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config;
  fi

install:
- conda install --yes python=$PY numpy==1.11.2 scipy nose sphinx mock swig
- if [ "$OS" = "Linux" ]; then if [ "$PY" = "2.7" ]; then pip install https://openmdao.org/dists/pyoptsparse-1.0.0-cp27-none-linux_x86_64.whl;
  elif [ "$PY" = "3.4" ]; then pip install https://openmdao.org/dists/pyoptsparse-1.0.0-py3-none-linux_x86_64.whl;
  fi fi
- if [ "$OS" = "MacOSX" ]; then if [ "$PY" = "2.7" ]; then pip install https://openmdao.org/dists/pyoptsparse-1.0.0-py2-none-macosx_10_5_x86_64.whl;
  elif [ "$PY" = "3.4" ]; then pip install https://openmdao.org/dists/pyoptsparse-1.0.0-cp34-none-macosx_10_5_x86_64.whl;
  fi fi
- if [ "$MPI" ]; then pip install mpi4py; pip install git+https://bitbucket.org/petsc/petsc4py@3.7.0;
  fi
- pip install redbaron
- pip install git+https://github.com/OpenMDAO/testflo.git
- pip install coverage
- pip install coveralls
- pip install -e .

script:
# make docs first
- cd openmdao/docs;
- make all
- cd ../..
# run all openmdao tests
- testflo -n 1 -m "ptest*"
- testflo -n 1 --coverage --coverpkg openmdao

after_success:
- coveralls

before_deploy:
- if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then
    eval "$(ssh-agent -s)";
    chmod 600 /tmp/deploy.rsa;
    ssh-add /tmp/deploy.rsa;
  fi

deploy:
  provider: script
  skip_cleanup: true
  script:
  - if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then
      if [ "$MPI" ] && [ "$PY" = "3.4" ]; then
        cd openmdao/docs;
        rsync -r --delete-after -v _build/html/* openmdao@web543.webfaction.com:webapps/bluedocs;
      fi
    fi
  on:
    branch: master
