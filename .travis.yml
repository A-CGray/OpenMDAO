branches:
  only:
  - master

group: deprecated-2017Q4

#sudo: false
filter_secrets: false

os:
- linux

language: generic

env:
  global:
    #set the SNOPT_LOCATION env variable in a secure manner.
    - secure: Xxjfap1pbrsxYqnLHqlLwUE100harEyB8goWSXZLG1T6sfCq4DbEWBE9yuOCgrAunA2hZ97QXg8Iqm32xcz5ZDED/ny6zJ6xIA0wv7hRHt509W1JVE812IV3LaKkTIyexNaxOx9V+VCoalYjEeHQo9m2smYim3KFXML7VkWpPw+xP2wM1a7/d7V0shb1hCW90yKqbzpklb/eySRKlpJV73vSDIdc3RXZZZpEosEjhK30Jw7KrFtqklQ/KMqF+d/3ALptW/cKp3Q+ygtiwSbiGiS8F3uRwEyVO0WCP6e+mUcQBn0ZkDZQyixHCPI8rUKprj1eIPHNHbNWqMZ2bk0U3OZtD2+Cb3qqHU4scp8Jr1+YJeXFHs70Qm5rfgJSWSSgkw5VTkfepJ9VRgTYjvHzoNj7YaBqq+QRdD48flbirvP0Ch8NcMrHkoQNmjDfLQlWjFaDLbaUvlZSID+N1octrNBOphTV/XTidolSOHQ45qtbyvzEBalTlIiyFX5b/tV9VQV6WB3rfsDTyWIUTLYq01kWPBiY9yPhEzfKumsZgAmm42p79MzFXymxJA5sP7yd3x+iMAST7hpbeDFdt9HSGePTNw+3fFQLXwcFqXItIdotTtYta23ajrnPWaEtVxbF16f5WPXL0NfNnvillYtAWQ2XveQFLLjWk1tFEj105lg=

  matrix:
    - PY=2.7 MPI=1
    - PY=3.6 MPI=1
    - PY=2.7 MPI=
    - PY=3.6 MPI=

git:
  depth: 99999

addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    packages:
    - gfortran
    - libblas-dev
    - liblapack-dev
    - libopenmpi-dev
    - openmpi-bin
    ssh_known_hosts:
    - web543.webfaction.com

notifications:
  slack:
    secure: Dd+tpZkz48Q47Y+PtdL4b+KAs55PsvWjt9ybhip6xljhA5kVsba9oZS+KsAC8RLWSzVJLOSjz3Cu3MsRym4sTd/g4Pbqyh0ldK2Xnl+n2JOgpPFSXtFuH4Ln3uWB6kYtUK6+aGIC8qhbvEt8tukTBT0RduEmdRyVIZ3oN7YjETPSZXvujeiUFLssfpZW2mqoA/tIgJHFSlySAp6J5694t2Z/p8sHOrK8G/Nm+qlk4xqXHvJ3xablcSBG4BZCrpqmMMdTLXBt2E2K9Rc1P2ZBIrSHVWfSLx+4n79U2385+og7miN1Zuf3gY3YuGKIwnBTtEzTu20905idkr4QdKELCBEcU4azdznwjvUkXWkiFAJII9UELTluSQmZX602zWk4AgJNeHxhN3EbBSMezfYVZjprhlAlwnZZv6t4qAkvuzb7KOA4s679xWzWOBOn1wkynfIF8A66APqssveyz/PvZHSjnHQoLgMU+kwzoX759o0Z/HuRlhCcjv0W9DWxU2bFNi/zVh9YyvR8fG15biGthzOyuf+CHjxohw+J6M+YdR1RIf1g/60nGUPHx4j4SN3kEFPmEDxzZT/f349gvaZGOmKXBi0wH8iY/i9RinM9LJB4t6chj2MkKwUA26bYaVaIO6FYPfE7r+tTG6OXdck4voCs/s4aa9VKEX97yhh0i9g=

before_install:
#- python -c "import fcntl; fcntl.fcntl(1, fcntl.F_SETFL, 0)"
- pip install --upgrade pip;

- OS=$(if [[ "$TRAVIS_OS_NAME" = "osx" ]]; then echo "MacOSX"; else echo "Linux"; fi)

- if [ "$OS" = "MacOSX" ] && [ "$MPI" ]; then
    brew install openmpi;
  fi

- wget "https://repo.continuum.io/miniconda/Miniconda-latest-$OS-x86_64.sh" -O miniconda.sh
- chmod +x miniconda.sh

- if [ "$OS" = "Linux" ]; then
    ./miniconda.sh -b  -p /home/travis/miniconda;
  fi

- if [ "$OS" = "MacOSX" ]; then
    ./miniconda.sh -b  -p /Users/travis/miniconda;
  fi

- PATHPREFIX=$(if [[ "$TRAVIS_OS_NAME" = "osx" ]]; then echo "/Users/travis/miniconda/bin";
  else echo "/home/travis/miniconda/bin"; fi)
- export PATH=$PATHPREFIX:$PATH
- export OPENMDAO_TEST_DOCS=1

install:
# get key decrypted, placed, chmodded, and added for passwordless access to WebFaction
- if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then
    openssl aes-256-cbc -K $encrypted_74d70a284b7d_key -iv $encrypted_74d70a284b7d_iv -in travis_deploy_rsa.enc -out /tmp/travis_deploy_rsa -d;
    eval "$(ssh-agent -s)";
    chmod 600 /tmp/travis_deploy_rsa;
    ssh-add /tmp/travis_deploy_rsa;
    echo -e "Host web543.webfaction.com\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config;
  fi

# keeping numpy pinned at 1.12 because pySNOPT dies with 1.13 because numpy broke callback
#- conda install --yes nomkl
- conda install --yes python=$PY
- conda install --yes numpy==1.12 scipy=0.19.1 nose sphinx mock swig pip
- pip install --upgrade pip

# install pyoptsparse
- git clone https://github.com/mdolab/pyoptsparse.git;
- cd pyoptsparse;
# get SNOPT source, securely, if SNOPT_LOCATION is set.
- cd pyoptsparse/pySNOPT/source;
- scp -r "$SNOPT_LOCATION" .;
- cd ../../..;
# return to building pyoptsparse
- python setup.py install;
- cd ..;

- if [ "$MPI" ]; then
    pip install mpi4py;
    pip install git+https://bitbucket.org/petsc/petsc4py@3.7.0;
  fi

- pip install redbaron
- pip install git+https://github.com/OpenMDAO/testflo.git
- pip install coverage
- pip install git+https://github.com/swryan/coveralls-python@work
- pip install .  # Not using -e on purpose here, to catch pkging errors

script:
# make docs first
- cd openmdao/docs;
- if [ "$MPI" ]; then
    make all;
  fi

# run the tests from down here to see if it can work without being at top level
- testflo -n 1 openmdao  -m "ptest*"
- testflo -n 1 openmdao --coverage  --coverpkg openmdao --cover-omit \*tests/\*  --cover-omit \*devtools/\* --cover-omit \*test_suite/\* --cover-omit \*docs/\*

after_success:
- coveralls --rcfile=../../.coveragerc --output=coveralls.json
- sed 's/\/home\/travis\/miniconda\/lib\/python'"$PY"'\/site-packages\///g' < coveralls.json > coveralls-upd.json
- coveralls --upload=coveralls-upd.json

deploy:
  provider: script
  skip_cleanup: true
  script:
  # only deploy docs in a build after a PR or merge is accepted
  - if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then
      if [ "$MPI" ] && [ "$PY" = "3.6" ]; then
        python _utils/upload_doc_version.py;
      fi
    fi
  on:
    branch: master
